{"version":3,"sources":["helpers/http.js","components/Table.jsx","components/Home.jsx","components/DetailsTrack.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","callback","callbackName","Math","round","random","window","data","document","body","removeChild","script","createElement","src","indexOf","appendChild","Table","className","map","song","artworkUrl60","loading","alt","artistName","trackName","to","trackId","Home","useState","isLoaded","setIsLoaded","termSearch","setTermSearch","isSearching","setIsSearching","setData","isDataAvailable","Object","keys","resultCount","debouncedQuery","useCallback","debounce","term","http","fetcher","useEffect","length","type","onChange","event","value","target","results","DetailsTrack","setSong","useParams","history","useHistory","handleResponse","response","href","onClick","goBack","artworkUrl100","previewUrl","controls","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82b2572c.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default (url, callback) => {\n    const callbackName = 'jsonp_callback_' + Math.round(100000 * Math.random());\n    window[callbackName] = (data) => {\n      delete window[callbackName];\n      document.body.removeChild(script);\n      callback(data);\n    };\n  \n    var script = document.createElement('script');\n    script.src =\n      url + (url.indexOf('?') >= 0 ? '&' : '?') + 'callback=' + callbackName;\n    document.body.appendChild(script);\n  };  ","import {\n    Link\n  } from \"react-router-dom\";\n  \nexport const Table = ({data}) => {\n    return (\n        <table className='table'>\n            <tbody>\n            {\n                data.map(song => (\n                    <tr key={song?.trackId}>\n                        <td><img src={song?.artworkUrl60} loading='lazy' alt={`${song?.artistName} - ${song?.trackName}`} /></td>\n                        <td>{song?.artistName}</td>\n                        <td>{song?.trackName}</td>\n                        <td className='table__details'><Link to={`/${song?.trackId}`}>Details</Link></td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n    )\n}","import react, {useCallback, useEffect, useState} from 'react'\nimport http from '../helpers/http';\nimport {debounce} from 'lodash'\nimport { Table } from './Table';\n\n\nexport const Home = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [termSearch, setTermSearch] = useState('')\n  const [isSearching, setIsSearching] = useState(false)\n  const [data, setData] = useState({})\n  const debouncedTime = 500 // in ms\n\n  // shortcut to know if data is available\n  let isDataAvailable = Object.keys(data) && data?.resultCount > 0;\n\n  const fetcher = (term) => {\n    setIsLoaded(false)\n    setIsSearching(true)\n    http(`https://itunes.apple.com/search?term=${term}&music=song&media=music&limit=100`, setData)\n\n  }\n  // exercice ask for a call by typing but iTunes WS limiting api call by 20 request by minute, \n  // so write a debounced function to handle that and trigger call only when user stop typing for minium 500ms (debouncedTime variable)\n  const debouncedQuery = useCallback(debounce(term => fetcher(term), debouncedTime), []);\n\n  const handleSearch = (event) => {\n    const {value} = event.target;\n    setTermSearch(value)\n    debouncedQuery(value)\n  }\n\n\n  useEffect(() => {\n    if( Object.keys(data).length){\n      setIsLoaded(true)\n      setIsSearching(false)\n    }\n  }, [data])\n\n  return (\n    <section className=\"home\">\n      <h1>iTunes Music Searcher</h1>\n      <input type='text' onChange={handleSearch} />\n      {\n        !isLoaded ? <p>Please type a filter...</p> : null\n      }\n      {\n        isSearching ? <p>Searching for {termSearch}</p> : null\n      }\n      {\n        isDataAvailable \n           ? <Table data={data?.results} />\n           : null\n      }\n\n    </section>\n  );\n}\n","import { useEffect, useState } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport http from \"../helpers/http\"\n\nexport const DetailsTrack = () => {\n    const [song, setSong] = useState({});\n    const [isLoaded, setIsLoaded] = useState(false);\n    let { trackId } = useParams();\n    const history = useHistory();\n    const goBack = () => history.goBack();\n;\n\n    const handleResponse = (response) => {\n        if(response?.resultCount > 0) {\n            setSong(response.results[0]);\n        }\n    }\n\n    useEffect(() => {\n        http(`https://itunes.apple.com/search?term=${trackId}`, handleResponse)\n    }, [trackId])\n\n    useEffect(() => {\n        if( Object.keys(song).length ) {\n            setIsLoaded(true);\n        }\n    }, [song])\n\n    return (\n        <section className='track-details'>\n            <h1>iTunes Music Searcher</h1>\n\n            <div className=\"panel\">\n                <button href=\"#\" onClick={goBack}>Go Back</button>\n            </div>\n\n            {\n                isLoaded \n                ? (<>\n                    <div className='panel'>\n                        <img src={song?.artworkUrl100} alt={`${song?.artistName} - ${song?.trackName}`}/>\n                    </div>\n\n                    <div className='panel'>\n                        \n                        <span className='meta'>{song?.artistName} - {song?.trackName}</span>\n\n                    </div>\n                    <div className='panel'>\n                        <audio src={song?.previewUrl} controls></audio>\n                    </div>\n                </>\n                )\n                : <h2>Loading track details</h2>\n            }\n        </section>\n    )\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport { Home } from './components/Home';\nimport { DetailsTrack } from './components/DetailsTrack';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/:trackId'>\n            <DetailsTrack />\n          </Route>\n          <Route>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}